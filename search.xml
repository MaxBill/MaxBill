<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Hexo写第一篇文章</title>
      <link href="/3439513514.html"/>
      <url>/3439513514.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>这是你的第一篇文章， 查看文档<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo文档</a> 以获取更多信息。 如果你在使用Hexo时遇到任何问题，你可以在<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除文档</a>中找到答案，或者也可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上咨询。</p><h3 id="建一篇新文章"><a href="#建一篇新文章" class="headerlink" title="建一篇新文章"></a>建一篇新文章</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"使用Hexo写第一篇文章"</span></span><br></pre></td></tr></table></figure></div><p>更多信息: 请参考Hexo官网 <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing写作文档</a></p><h3 id="启动Hexo服务"><a href="#启动Hexo服务" class="headerlink" title="启动Hexo服务"></a>启动Hexo服务</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server (hexo s)</span><br></pre></td></tr></table></figure></div><p>更多信息: 请参考Hexo官网 <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server服务文档</a></p><h3 id="生成静态资源"><a href="#生成静态资源" class="headerlink" title="生成静态资源"></a>生成静态资源</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate (hexo g)</span><br></pre></td></tr></table></figure></div><p>更多信息: 请参考Hexo官网 <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating静态化文档</a></p><h3 id="远程部署站点"><a href="#远程部署站点" class="headerlink" title="远程部署站点"></a>远程部署站点</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy (hexo d)</span><br></pre></td></tr></table></figure></div><p>更多信息: 请参考Hexo官网 <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment部署文档</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 建站过程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式文件系统FastDFS安装部署(高可用)</title>
      <link href="/4293262294.html"/>
      <url>/4293262294.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>本文会搭建一个适合低业务访问业务量的高可用的FastDFS集群环境：两个Tracker服务，一个storage group中两个storage服务节点；该方案仅适用于业务访问量较低的环境下。对于大量业务系统的高并发访问，为了保证存储系统正常工作一般的架构思路：安装多个Tracker服务(至少两个，根据业务量调整)，搭建多个storage group(至少两个，根据业务量调整)，每个storage group中多个storage node(至少两个，做数据的冗余备份，进行容灾机制，而且node必须在不同的机器上)</p><h2 id="一、FastDFS简介"><a href="#一、FastDFS简介" class="headerlink" title="一、FastDFS简介"></a><strong>一、FastDFS简介</strong></h2><p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p><p>FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p><p>FastDFS服务端有两个角色：跟踪器（tracker）和存储节点（storage）。跟踪器主要做调度工作，在访问上起负载均衡的作用。</p><p>存储节点存储文件，完成文件管理的所有功能：就是这样的存储、同步和提供存取接口，FastDFS同时对文件的metadata进行管理。所谓文件的meta data就是文件的相关属性，以键值对（key value）方式表示，如：width=1024，其中的key为width，value为1024。文件metadata是文件属性列表，可以包含多个键值对。</p><p>跟踪器和存储节点都可以由一台或多台服务器构成。跟踪器和存储节点中的服务器均可以随时增加或下线而不会影响线上服务。其中跟踪器中的所有服务器都是对等的，可以根据服务器的压力情况随时增加或减少。</p><p>为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。</p><p>在卷中增加服务器时，同步已有的文件由系统自动完成，同步完成后，系统自动将新增服务器切换到线上提供服务。</p><p>当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。</p><p>FastDFS中的文件标识分为两个部分：卷名和文件名，二者缺一不可。</p><p>———简介摘自百度百科</p><h2 id="二、FastDFS原理介绍"><a href="#二、FastDFS原理介绍" class="headerlink" title="二、FastDFS原理介绍"></a><strong>二、FastDFS原理介绍</strong></h2><h3 id="1-文件上传"><a href="#1-文件上传" class="headerlink" title="1.文件上传"></a>1.文件上传</h3><p>FastDFS以客户端库的方式提供基本的文件访问接口如upload、download、append、delete等，Storage 服务会定时的向Tracker服务发送自己的存储信息。当Tracker 服务集群中的Tracker 服务是多个时，各个Tracker服务之间的关系是对等的，因此客户端上传时会任意选择一个Trackre服务。当Tracker服务收到客户端上传文件请求时，会为该文件分配一个可以存储文件的group，当选定了group后就要决定给客户端分配group中的哪一个storage服务。当分配好storage 服务后，客户端向storage发送写文件请求，storage将会为文件分配一个数据存储目录。然后为文件分配一个文件ID标示，然后根据以上的信息生成文件名存储文件。</p><h3 id="2-文件同步"><a href="#2-文件同步" class="headerlink" title="2.文件同步"></a>2.文件同步</h3><p>上传文件后，客户端将文件写到group内的一个storage 服务即为上传文件成功，storage服务写完文件后，会由后台线程将文件同步至同group内的其他的storage 服务节点上。 每个storage服务写文件后，会同时写一份binlog，binlog里不包含文件数据，只包含文件名等元信息，这份binlog用于后台同步，storage会记录向group内其他storage同步的进度，以便重启后能接上次的进度继续同步；进度以时间戳的方式进行记录，所以最好能保证集群内的所有server的始终保持同步。最后Storage服务的同步进度会作为元数据的一部分汇报到tracker服务上，tracker服务在选择读storage的时候会以同步进度作为参考指标。</p><h3 id="3-下载文件"><a href="#3-下载文件" class="headerlink" title="3.下载文件"></a>3.下载文件</h3><p>当下载文件时，客户端先询问tracker服务下载文件的storage，参数为文件标识（卷名和文件名）；然后tracker向客户端返回一台可用的storage；最后客户端直接和storage通讯完成文件下载。</p><h2 id="三、部署环境准备"><a href="#三、部署环境准备" class="headerlink" title="三、部署环境准备"></a><strong>三、部署环境准备</strong></h2><h3 id="1-环境说明"><a href="#1-环境说明" class="headerlink" title="1.环境说明"></a>1.环境说明</h3><p>操作系统CentOS7.6</p><p>fastdfs版本：6.01</p><p>nginx版本：1.16.1</p><p>keepalived版本：2.0.19</p><h3 id="2-系统依赖"><a href="#2-系统依赖" class="headerlink" title="2.系统依赖"></a>2.系统依赖</h3><p>gcc gcc-c++ perl pcre pcre-devel zlib zlib-devel openssl openssl-devel libnl libnl-devel</p><h3 id="3-软件环境"><a href="#3-软件环境" class="headerlink" title="3.软件环境"></a>3.软件环境</h3><p>libevent下载地址：<a href="http://libevent.org/" target="_blank" rel="noopener">http://libevent.org/</a></p><p>nginx下载地址：<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a></p><p>keepalived下载地址：<a href="https://www.keepalived.org/software/" target="_blank" rel="noopener">https://www.keepalived.org/software/</a></p><p>fastdfs下载地址：<a href="https://github.com/happyfish100/fastdfs/releases" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs/releases</a></p><p>libfasttcommon下载地址：<a href="https://github.com/happyfish100/libfastcommon/releases" target="_blank" rel="noopener">https://github.com/happyfish100/libfastcommon/releases</a></p><p>fastdfs-nginx-module下载地址：<a href="https://github.com/happyfish100/fastdfs-nginx-module/releases" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs-nginx-module/releases</a></p><h3 id="4-机器及网络环境规划"><a href="#4-机器及网络环境规划" class="headerlink" title="4.机器及网络环境规划"></a>4.机器及网络环境规划</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">angelscript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Fdfs Server VIP：         <span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span></span><br><span class="line"></span><br><span class="line">Tracker Server1：         <span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span></span><br><span class="line"></span><br><span class="line">Tracker Server2：         <span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span></span><br><span class="line"></span><br><span class="line">Storage Group1 Node1：    <span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span></span><br><span class="line"></span><br><span class="line">Storage Group1 Node2：    <span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span></span><br></pre></td></tr></table></figure></div><h3 id="5-防火墙设置"><a href="#5-防火墙设置" class="headerlink" title="5.防火墙设置"></a>5.防火墙设置</h3><p>关闭系统防火墙：sudo systemctl stop firewalld &amp;&amp; systemctl disable firewalld</p><h2 id="四、Keepalived服务安装配置"><a href="#四、Keepalived服务安装配置" class="headerlink" title="四、Keepalived服务安装配置"></a><strong>四、Keepalived服务安装配置</strong></h2><h3 id="1-下载Keepalived源码包"><a href="#1-下载Keepalived源码包" class="headerlink" title="1.下载Keepalived源码包"></a>1.下载Keepalived源码包</h3><p>官网地址：<a href="https://www.keepalived.org/" target="_blank" rel="noopener">https://www.keepalived.org/</a></p><p>下载地址：<a href="https://www.keepalived.org/software/keepalived-2.0.19.tar.gz" target="_blank" rel="noopener">https://www.keepalived.org/software/keepalived-2.0.19.tar.gz</a></p><h3 id="2-上传并解压Keepalived源码包"><a href="#2-上传并解压Keepalived源码包" class="headerlink" title="2.上传并解压Keepalived源码包"></a>2.上传并解压Keepalived源码包</h3><p>tar -zxvf keepalived-2.0.19.tar.gz</p><h3 id="3-编译Keepalived准备"><a href="#3-编译Keepalived准备" class="headerlink" title="3.编译Keepalived准备"></a>3.编译Keepalived准备</h3><p>进入解压目录：cd keepalived-2.0.19</p><p>执行编译准备：./configure –prefix=/work/keepalived</p><p>注意：一定要有gcc和openssl编译相关的依赖</p><h3 id="4-编译安装Keepalived"><a href="#4-编译安装Keepalived" class="headerlink" title="4.编译安装Keepalived"></a>4.编译安装Keepalived</h3><p>make &amp;&amp; make install</p><h3 id="5-安装配置Keepalived"><a href="#5-安装配置Keepalived" class="headerlink" title="5.安装配置Keepalived"></a>5.安装配置Keepalived</h3><p>keepalived启动时会从/etc/keepalived/中相关的目录下查找keepalived.conf配置文件，因此将keepalived安装录/usr/local/keepalived/etc/keepalived.conf 拷贝到/etc/keepalived/中。</p><p>mkdir /etc/keepalived/</p><p>cp /work/keepalived/etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf</p><p>cp /work/keepalived/etc/sysconfig/keepalived /etc/sysconfig/keepalived</p><h3 id="6-设置Keepalived开机启动项"><a href="#6-设置Keepalived开机启动项" class="headerlink" title="6.设置Keepalived开机启动项"></a>6.设置Keepalived开机启动项</h3><p>systemctl enable keepalived</p><p>然后就能使用systemctl start/stop/status keepalived管理keepalived了</p><h3 id="7-配置Keepalived服务"><a href="#7-配置Keepalived服务" class="headerlink" title="7.配置Keepalived服务"></a>7.配置Keepalived服务</h3><p>192.168.100.111机器上配置：vi /etc/keepalived/keepalived.conf</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">routeros</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">       interval 3</span><br><span class="line">      <span class="built_in"> script </span><span class="string">"/work/script/check_nginx.sh"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">vrrp_instance fdfs_server &#123;</span><br><span class="line">       state MASTER</span><br><span class="line">      <span class="built_in"> interface </span>enp0s3</span><br><span class="line">       virtual_router_id 110</span><br><span class="line">       priority 100</span><br><span class="line">       advert_int 3</span><br><span class="line">       authentication &#123;</span><br><span class="line">            auth_type PASS</span><br><span class="line">            auth_pass password</span><br><span class="line">       &#125;</span><br><span class="line">       virtual_ipaddress &#123;</span><br><span class="line">            192.168.100.110</span><br><span class="line">       &#125;</span><br><span class="line">       track_script &#123;</span><br><span class="line">            check_nginx</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>192.168.100.112机器上配置：vi /etc/keepalived/keepalived.conf</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">routeros</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">       interval 3</span><br><span class="line">      <span class="built_in"> script </span><span class="string">"/work/script/check_nginx.sh"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">vrrp_instance fdfs_server &#123;</span><br><span class="line">       state BACKUP</span><br><span class="line">      <span class="built_in"> interface </span>enp0s3</span><br><span class="line">       virtual_router_id 110</span><br><span class="line">       priority 90</span><br><span class="line">       advert_int 3</span><br><span class="line">       authentication &#123;</span><br><span class="line">            auth_type PASS</span><br><span class="line">            auth_pass password</span><br><span class="line">       &#125;</span><br><span class="line">       virtual_ipaddress &#123;</span><br><span class="line">            192.168.100.110</span><br><span class="line">       &#125;</span><br><span class="line">       track_script &#123;</span><br><span class="line">            check_nginx</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="8-编写nginx服务检测脚本"><a href="#8-编写nginx服务检测脚本" class="headerlink" title="8.编写nginx服务检测脚本"></a>8.编写nginx服务检测脚本</h3><p>vi /work/script/check_nginx.sh</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">awk</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">active_status=`netstat -lntp|grep nginx|wc -l`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$active_status</span> -gt <span class="number">0</span> ]; then</span><br><span class="line">    <span class="keyword">exit</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure></div><p>然后给脚本赋予执行权限：chmod +x /work/script/check_nginx.sh</p><h3 id="9-修改内核参数"><a href="#9-修改内核参数" class="headerlink" title="9.修改内核参数"></a>9.修改内核参数</h3><p>vi /etc/sysctl.conf</p><p>增加如下内容：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ini</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net.ipv4.ip_nonlocal_bind</span> = <span class="number">1</span>  <span class="comment">#允许忽视VIP的存在</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net.ipv4.ip_forward</span> = <span class="number">1</span>  <span class="comment">#允许转发</span></span><br></pre></td></tr></table></figure></div><p>sysctl –system 使配置生效</p><h2 id="五、安装FastDFS依赖库"><a href="#五、安装FastDFS依赖库" class="headerlink" title="五、安装FastDFS依赖库"></a><strong>五、安装FastDFS依赖库</strong></h2><h3 id="1-安装libevent依赖"><a href="#1-安装libevent依赖" class="headerlink" title="1.安装libevent依赖"></a>1.安装libevent依赖</h3><p>解压libevent源码包：tar -zxvf libevent-2.1.11-stable.tar.gz</p><p>进入源码目录：cd libevent-2.1.11-stable</p><p>编译安装前配置：./configure</p><p>编译安装：make &amp;&amp; make install</p><p>默认安装位置：/usr/local/lib</p><h3 id="2-安装libfasttcommon依赖"><a href="#2-安装libfasttcommon依赖" class="headerlink" title="2.安装libfasttcommon依赖"></a>2.安装libfasttcommon依赖</h3><p>解压libfasttcommon源码包：tar -zxvf libfastcommon-1.0.41.tar.gz</p><p>进入源码目录：cd libfastcommon-1.0.41</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><p>默认安装位置：/usr/lib64</p><h2 id="六、安装部署Tracker服务和Storage服务"><a href="#六、安装部署Tracker服务和Storage服务" class="headerlink" title="六、安装部署Tracker服务和Storage服务"></a><strong>六、安装部署Tracker服务和Storage服务</strong></h2><h3 id="1-安装fastdfs服务"><a href="#1-安装fastdfs服务" class="headerlink" title="1.安装fastdfs服务"></a>1.安装fastdfs服务</h3><p>解压fastdfs源码包：tar -zxvf fastdfs-6.01.tar.gz</p><p>进入fastdfs源码包：cd fastdfs-6.01</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><h3 id="2-fastdfs服务目录信息"><a href="#2-fastdfs服务目录信息" class="headerlink" title="2.fastdfs服务目录信息"></a>2.fastdfs服务目录信息</h3><p>安装完成后服务及脚本拷贝到/usr/bin 目录，配置文件拷贝到/etc/fdfs目录，启动脚本拷贝到/etc/init.d/目录</p><h3 id="3-注册开机启动"><a href="#3-注册开机启动" class="headerlink" title="3.注册开机启动"></a>3.注册开机启动</h3><p>chkconfig –add fdfs_trackerd</p><p>chkconfig fdfs_trackerd on</p><p>chkconfig –add fdfs_storaged</p><p>chkconfig fdfs_storaged on</p><h3 id="4-数据目录规划"><a href="#4-数据目录规划" class="headerlink" title="4.数据目录规划"></a>4.数据目录规划</h3><p>创建fdfs数据主目录：mkdir /work/fdfs</p><p>创建tracker数据目录：mkdir /work/fdfs/tracker</p><p>创建storage数据目录：mkdir /work/fdfs/storage</p><h3 id="5-配置tracker服务"><a href="#5-配置tracker服务" class="headerlink" title="5.配置tracker服务"></a>5.配置tracker服务</h3><p>将/etc/fdfs目录下的tracker.conf.sample改为tracker.conf：mv tracker.conf.sample tracker.conf修改内容如下：</p><p>将base_path=/home/yuqing/fastdfs 改为：/work/fdfs/tracker(该目录为上面定义创建)</p><p>启动Tracker服务：systemctl start fdfs_trackerd</p><h3 id="6-配置storage服务"><a href="#6-配置storage服务" class="headerlink" title="6.配置storage服务"></a>6.配置storage服务</h3><p>将/etc/fdfs目录下的storage.conf.sample改为storage.conf：mv storage.conf.sample storage.conf修改内容如下：</p><p>base_path=/home/yuqing/fastdfs 改为：base_path=/work/fdfs/storage(该目录为上面定义创建)</p><p>store_path0=/home/yuqing/fastdfs 改为：store_path0=/work/fdfs/storage(该目录为上面定义创建)</p><p>tracker_server=192.168.209.121:22122 改为：tracker_server=192.168.100.111:22122和tracker_server=192.168.100.112:22122</p><p>将/etc/fdfs/torage_ids.conf.sample 为storage_ids.conf，内容修改为当前group的storage节点信息：</p><p>100001 group1 192.168.100.111</p><p>100002 group1 192.168.100.112</p><p>启动Storage服务：systemctl start fdfs_storaged</p><h2 id="七、Nginx服务安装配置"><a href="#七、Nginx服务安装配置" class="headerlink" title="七、Nginx服务安装配置"></a><strong>七、Nginx服务安装配置</strong></h2><h3 id="1-下载Nginx源码包"><a href="#1-下载Nginx源码包" class="headerlink" title="1.下载Nginx源码包"></a>1.下载Nginx源码包</h3><p>官网地址：<a href="http://nginx.org/" target="_blank" rel="noopener">http://nginx.org/</a></p><p>下载地址：<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a></p><h3 id="2-上传并解压Nginx源码包及fastdfs插件包"><a href="#2-上传并解压Nginx源码包及fastdfs插件包" class="headerlink" title="2.上传并解压Nginx源码包及fastdfs插件包"></a>2.上传并解压Nginx源码包及fastdfs插件包</h3><p>tar -zxvf nginx-1.16.1.tar.gz</p><p>tar -zxvf fastdfs-nginx-module-1.21.tar.gz</p><h3 id="3-编译Nginx准备"><a href="#3-编译Nginx准备" class="headerlink" title="3.编译Nginx准备"></a>3.编译Nginx准备</h3><p>进入解压目录：cd nginx-1.16.1</p><p>拷贝fastdfs插件包到nginx源码目录：mv ../fastdfs-nginx-module-1.21 .</p><p>执行编译准备：./configure –prefix=/work/nginx \–with-stream \–add-module=fastdfs-nginx-module-1.21/src</p><p>注意：一定要有gcc和openssl编译相关的依赖</p><h3 id="4-编译安装Nginx"><a href="#4-编译安装Nginx" class="headerlink" title="4.编译安装Nginx"></a>4.编译安装Nginx</h3><p>make &amp;&amp; make install</p><h3 id="5-注册到系统服务"><a href="#5-注册到系统服务" class="headerlink" title="5.注册到系统服务"></a>5.注册到系统服务</h3><p>vi /usr/lib/systemd/system/nginx.service</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">ini</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=nginx</span><br><span class="line"><span class="attr">Documentation</span>=http://nginx.org/en/docs/</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">PIDFile</span>=/work/nginx/logs/nginx.pid</span><br><span class="line"><span class="attr">ExecStartPre</span>=/work/nginx/sbin/nginx -t -c /work/nginx/conf/nginx.conf</span><br><span class="line"><span class="attr">ExecStart</span>=/work/nginx/sbin/nginx -c /work/nginx/conf/nginx.conf</span><br><span class="line"><span class="attr">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">ExecStop</span>=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></div><h3 id="6-设置Nginx开机启动项"><a href="#6-设置Nginx开机启动项" class="headerlink" title="6.设置Nginx开机启动项"></a>6.设置Nginx开机启动项</h3><p>systemctl enable nginx</p><p>然后就能使用systemctl start/stop/status nginx管理nginx了</p><h3 id="7-修改Nginx配置"><a href="#7-修改Nginx配置" class="headerlink" title="7.修改Nginx配置"></a>7.修改Nginx配置</h3><p>vi /work/nginx/conf/nginx.conf</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">angelscript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  <span class="number">1</span>;</span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line"></span><br><span class="line">    upstream tracker &#123;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span>:<span class="number">22122</span> weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">10</span>s;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span>:<span class="number">22122</span> weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">10</span>s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">7777</span>;</span><br><span class="line">        proxy_timeout <span class="number">5</span>m;</span><br><span class="line">        proxy_pass tracker;</span><br><span class="line">        proxy_connect_timeout <span class="number">10</span>s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    upstream storage &#123;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span>:<span class="number">8888</span> weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">10</span>s;</span><br><span class="line">         server <span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span>:<span class="number">8888</span> weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">10</span>s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        </span><br><span class="line">        location /group1 &#123;</span><br><span class="line">            proxy_pass         http:<span class="comment">//storage;</span></span><br><span class="line">            proxy_set_header   Host             $host;</span><br><span class="line">            proxy_set_header   X-Real-IP        $remote_addr;</span><br><span class="line">            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">8888</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            alias /work/fdfs/storage/data/;</span><br><span class="line">            ngx_fastdfs_module;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="8-配置nginx的fdfs插件"><a href="#8-配置nginx的fdfs插件" class="headerlink" title="8.配置nginx的fdfs插件"></a>8.配置nginx的fdfs插件</h3><p>将/etc/fdfs下的http.conf.sample和mime.types.sample重命名为：http.conf和mime.types</p><p>将fastdfs-nginx-module-1.21/src下的mod_fastdfs.conf拷贝到/etc/fdfs下</p><p>修改mod_fastdfs.conf如下：</p><p>连接超时时间： connect_timeout=5</p><p>Tracker服务地址：tracker_server=192.168.100.111:22122 和tracker_server=192.168.100.112:22122</p><p>Storage服务端口：storage_server_port=23000</p><p>如果文件ID的uri中包含/group**，则要设置为true：url_have_group_name = true</p><p>Storage配置的store_path0路径，必须和storage.conf中的一致：store_path0=/work/fdfs/storage</p><p>其他详细配置如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">vala</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># connect timeout in seconds</span></span><br><span class="line"><span class="meta"># default value is 30s</span></span><br><span class="line">connect_timeout=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># network recv and send timeout in seconds</span></span><br><span class="line"><span class="meta"># default value is 30s</span></span><br><span class="line">network_timeout=<span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># the base path to store log files</span></span><br><span class="line">base_path=/work/fdfs/storage</span><br><span class="line"></span><br><span class="line"><span class="meta"># if load FastDFS parameters from tracker server</span></span><br><span class="line"><span class="meta"># since V1.12</span></span><br><span class="line"><span class="meta"># default value is false</span></span><br><span class="line">load_fdfs_parameters_from_tracker=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># storage sync file max delay seconds</span></span><br><span class="line"><span class="meta"># same as tracker.conf</span></span><br><span class="line"><span class="meta"># valid only when load_fdfs_parameters_from_tracker is false</span></span><br><span class="line"><span class="meta"># since V1.12</span></span><br><span class="line"><span class="meta"># default value is 86400 seconds (one day)</span></span><br><span class="line">storage_sync_file_max_delay = <span class="number">86400</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># if use storage ID instead of IP address</span></span><br><span class="line"><span class="meta"># same as tracker.conf</span></span><br><span class="line"><span class="meta"># valid only when load_fdfs_parameters_from_tracker is false</span></span><br><span class="line"><span class="meta"># default value is false</span></span><br><span class="line"><span class="meta"># since V1.13</span></span><br><span class="line">use_storage_id = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># specify storage ids filename, can use relative or absolute path</span></span><br><span class="line"><span class="meta"># same as tracker.conf</span></span><br><span class="line"><span class="meta"># valid only when load_fdfs_parameters_from_tracker is false</span></span><br><span class="line"><span class="meta"># since V1.13</span></span><br><span class="line">storage_ids_filename = storage_ids.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># FastDFS tracker_server can ocur more than once, and tracker_server format is</span></span><br><span class="line"><span class="meta">#  "host:port", host can be hostname or ip address</span></span><br><span class="line"><span class="meta"># valid only when load_fdfs_parameters_from_tracker is true</span></span><br><span class="line">tracker_server=<span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span>:<span class="number">22122</span></span><br><span class="line">tracker_server=<span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span>:<span class="number">22122</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># the port of the local storage server</span></span><br><span class="line"><span class="meta"># the default value is 23000</span></span><br><span class="line">storage_server_port=<span class="number">23000</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># the group name of the local storage server</span></span><br><span class="line">group_name=group1</span><br><span class="line"></span><br><span class="line"><span class="meta"># if the url / uri including the group name</span></span><br><span class="line"><span class="meta"># set to false when uri like /M00/00/00/xxx</span></span><br><span class="line"><span class="meta"># set to true when uri like $&#123;group_name&#125;/M00/00/00/xxx, such as group1/M00/xxx</span></span><br><span class="line"><span class="meta"># default value is false</span></span><br><span class="line">url_have_group_name = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># path(disk or mount point) count, default value is 1</span></span><br><span class="line"><span class="meta"># must same as storage.conf</span></span><br><span class="line">store_path_count=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># store_path#, based 0, if store_path0 not exists, it's value is base_path</span></span><br><span class="line"><span class="meta"># the paths must be exist</span></span><br><span class="line"><span class="meta"># must same as storage.conf</span></span><br><span class="line">store_path0=/work/fdfs/storage</span><br><span class="line"></span><br><span class="line"><span class="meta"># standard log level as syslog, case insensitive, value list:</span></span><br><span class="line"><span class="meta">### emerg for emergency</span></span><br><span class="line"><span class="meta">### alert</span></span><br><span class="line"><span class="meta">### crit for critical</span></span><br><span class="line"><span class="meta">### error</span></span><br><span class="line"><span class="meta">### warn for warning</span></span><br><span class="line"><span class="meta">### notice</span></span><br><span class="line"><span class="meta">### info</span></span><br><span class="line"><span class="meta">### debug</span></span><br><span class="line">log_level=info</span><br><span class="line"></span><br><span class="line"><span class="meta"># set the log filename, such as /usr/local/apache2/logs/mod_fastdfs.log</span></span><br><span class="line"><span class="meta"># empty for output to stderr (apache and nginx error_log file)</span></span><br><span class="line">log_filename=</span><br><span class="line"></span><br><span class="line"><span class="meta"># response mode when the file not exist in the local file system</span></span><br><span class="line"><span class="meta">## proxy: get the content from other storage server, then send to client</span></span><br><span class="line"><span class="meta">## redirect: redirect to the original storage server (HTTP Header is Location)</span></span><br><span class="line">response_mode=proxy</span><br><span class="line"></span><br><span class="line"><span class="meta"># the NIC alias prefix, such as eth in Linux, you can see it by ifconfig -a</span></span><br><span class="line"><span class="meta"># multi aliases split by comma. empty value means auto set by OS type</span></span><br><span class="line"><span class="meta"># this paramter used to get all ip address of the local host</span></span><br><span class="line"><span class="meta"># default values is empty</span></span><br><span class="line">if_alias_prefix=</span><br><span class="line"></span><br><span class="line"><span class="meta"># use "#include" directive to include HTTP config file</span></span><br><span class="line"><span class="meta"># NOTE: #include is an include directive, do NOT remove the # before include</span></span><br><span class="line"><span class="meta">#include http.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># if support flv</span></span><br><span class="line"><span class="meta"># default value is false</span></span><br><span class="line"><span class="meta"># since v1.15</span></span><br><span class="line">flv_support = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># flv file extension name</span></span><br><span class="line"><span class="meta"># default value is flv</span></span><br><span class="line"><span class="meta"># since v1.15</span></span><br><span class="line">flv_extension = flv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># set the group count</span></span><br><span class="line"><span class="meta"># set to none zero to support multi-group on this storage server</span></span><br><span class="line"><span class="meta"># set to 0  for single group only</span></span><br><span class="line"><span class="meta"># groups settings section as [group1], [group2], ..., [groupN]</span></span><br><span class="line"><span class="meta"># default value is 0</span></span><br><span class="line"><span class="meta"># since v1.14</span></span><br><span class="line">group_count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># group settings for group #1</span></span><br><span class="line"><span class="meta"># since v1.14</span></span><br><span class="line"><span class="meta"># when support multi-group on this storage server, uncomment following section</span></span><br><span class="line">[group1]</span><br><span class="line">group_name=group1</span><br><span class="line">storage_server_port=<span class="number">23000</span></span><br><span class="line">store_path_count=<span class="number">1</span></span><br><span class="line">store_path0=/work/fdfs/storage</span><br><span class="line"></span><br><span class="line"><span class="meta"># group settings for group #2</span></span><br><span class="line"><span class="meta"># since v1.14</span></span><br><span class="line"><span class="meta"># when support multi-group, uncomment following section as neccessary</span></span><br><span class="line"><span class="meta">#[group2]</span></span><br><span class="line"><span class="meta">#group_name=group2</span></span><br><span class="line"><span class="meta">#storage_server_port=23000</span></span><br><span class="line"><span class="meta">#store_path_count=1</span></span><br><span class="line"><span class="meta">#store_path0=/home/yuqing/fastdfs</span></span><br></pre></td></tr></table></figure></div><h2 id="八、服务启动及验证"><a href="#八、服务启动及验证" class="headerlink" title="八、服务启动及验证"></a><strong>八、服务启动及验证</strong></h2><p>分别启动keepalive、nginx、tracker、storage服务</p><p>查看服务是否正常服务：</p><p><a href="https://oscimg.oschina.net/oscnet/0e39fd8468a028040406cce85bde48b5586.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/0e39fd8468a028040406cce85bde48b5586.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>在任意Storage机器上查看集群状态：fdfs_monitor /etc/fdfs/storage.conf</p><p><a href="https://oscimg.oschina.net/oscnet/fda6e27aedde1ebc7a92d3db5af2048e9e9.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/fda6e27aedde1ebc7a92d3db5af2048e9e9.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h2 id="九、Java客户端测试"><a href="#九、Java客户端测试" class="headerlink" title="九、Java客户端测试"></a><strong>九、Java客户端测试</strong></h2><h3 id="1-java项目Maven依赖"><a href="#1-java项目Maven依赖" class="headerlink" title="1.java项目Maven依赖"></a>1.java项目Maven依赖</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">项目地址：https://github.com/tobato/FastDFS_Client</span></span><br><span class="line"></span><br><span class="line"><span class="string">目前客户端主要依赖于SpringBoot，因此必须引入:</span></span><br><span class="line"><span class="string">&lt;parent&gt;</span></span><br><span class="line">   <span class="string">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line">   <span class="string">&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span></span><br><span class="line">   <span class="string">&lt;version&gt;2.0.0.RELEASE&lt;/version&gt;</span></span><br><span class="line">   <span class="string">&lt;relativePath/&gt;</span></span><br><span class="line"><span class="string">&lt;/parent&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">FastDFS</span> <span class="string">依赖包：</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;com.github.tobato&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;fastdfs-client&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="string">&lt;version&gt;1.26.7&lt;/version&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">将FastDFS引入项目：</span></span><br><span class="line"><span class="string">@Import(FdfsClientConfig.class)</span></span><br><span class="line"></span><br><span class="line"><span class="string">在application.yml当中配置Fdfs相关参数：</span></span><br><span class="line"><span class="attr">fdfs:</span></span><br><span class="line">  <span class="attr">pool:</span></span><br><span class="line">    <span class="comment">#连接池最大数量</span></span><br><span class="line">    <span class="attr">max-total:</span> <span class="number">200</span></span><br><span class="line">    <span class="comment">#每个tracker地址的最大连接数</span></span><br><span class="line">    <span class="attr">max-total-per-key:</span> <span class="number">50</span></span><br><span class="line">    <span class="comment">#连接耗尽时等待获取连接的最大毫秒数</span></span><br><span class="line">    <span class="attr">max-wait-millis:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">so-timeout:</span> <span class="number">1500</span></span><br><span class="line">  <span class="attr">connect-timeout:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">thumb-image:</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">tracker-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span><span class="string">:7777</span></span><br><span class="line"><span class="string">或者</span></span><br><span class="line"><span class="attr">fdfs:</span></span><br><span class="line">  <span class="attr">pool:</span></span><br><span class="line">    <span class="comment">#连接池最大数量</span></span><br><span class="line">    <span class="attr">max-total:</span> <span class="number">200</span></span><br><span class="line">    <span class="comment">#每个tracker地址的最大连接数</span></span><br><span class="line">    <span class="attr">max-total-per-key:</span> <span class="number">50</span></span><br><span class="line">    <span class="comment">#连接耗尽时等待获取连接的最大毫秒数</span></span><br><span class="line">    <span class="attr">max-wait-millis:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">so-timeout:</span> <span class="number">1500</span></span><br><span class="line">  <span class="attr">connect-timeout:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">thumb-image:</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">tracker-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.111</span><span class="string">:22122</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.112</span><span class="string">:22122</span></span><br><span class="line"></span><br><span class="line"><span class="string">使用接口服务对Fdfs服务端进行操作，主要接口包括：</span></span><br><span class="line"><span class="string">TrackerClient</span> <span class="bullet">-</span> <span class="string">TrackerServer接口</span></span><br><span class="line"><span class="string">GenerateStorageClient</span> <span class="bullet">-</span> <span class="string">一般文件存储接口</span> <span class="string">(StorageServer接口)</span></span><br><span class="line"><span class="string">FastFileStorageClient</span> <span class="bullet">-</span> <span class="string">为方便项目开发集成的简单接口(StorageServer接口)</span></span><br><span class="line"><span class="string">AppendFileStorageClient</span> <span class="bullet">-</span> <span class="string">支持文件续传操作的接口</span> <span class="string">(StorageServer接口)</span></span><br></pre></td></tr></table></figure></div><h3 id="2-代码测试"><a href="#2-代码测试" class="headerlink" title="2.代码测试"></a>2.代码测试</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">pgsql</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">package com.maxbill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.FdfsClientConfig;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.<span class="keyword">domain</span>.fdfs.MetaData;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.<span class="keyword">domain</span>.fdfs.StorePath;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.<span class="keyword">domain</span>.proto.<span class="keyword">storage</span>.DownloadByteArray;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.service.FastFileStorageClient;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.<span class="keyword">Import</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line">@Log4j2</span><br><span class="line">@Component</span><br><span class="line">@<span class="keyword">Import</span>(FdfsClientConfig.<span class="keyword">class</span>)</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> FdfsClientUtil &#123;</span><br><span class="line"></span><br><span class="line">    private static final String BASE_URL = "http://192.168.100.110:8888/";</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private FastFileStorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    private static FdfsClientUtil fdfsClientUtil;</span><br><span class="line"></span><br><span class="line">    @PostConstruct</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> init() &#123;</span><br><span class="line">        fdfsClientUtil = this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param file    文件信息</span></span><br><span class="line"><span class="comment">     * @param infoMap 文件扩展信息</span></span><br><span class="line"><span class="comment">     * @return 上传路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> static Map&lt;String, <span class="keyword">Object</span>&gt; uploadFile(File file, Map&lt;String, String&gt; infoMap) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            String fileName = file.getName();</span><br><span class="line">            String fileType = fileName.substring(fileName.lastIndexOf("\\") + <span class="number">1</span>);</span><br><span class="line">            //String fileType = FilenameUtils.getExtension(file.getName())</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-upload]-start upload file ... ");</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-upload]-request upload file name: &#123;&#125;", fileName);</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-upload]-request upload file info: &#123;&#125;", infoMap);</span><br><span class="line">            StorePath <span class="type">path</span> = fdfsClientUtil.storageClient.uploadFile(<span class="built_in">new</span> FileInputStream(file), file.length(), fileType, getMetaData(infoMap));</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-upload]-upload success path: &#123;&#125;", <span class="type">path</span>.getFullPath());</span><br><span class="line">            <span class="keyword">return</span> getResultMap(BASE_URL.concat(<span class="type">path</span>.getFullPath()), <span class="keyword">null</span>);</span><br><span class="line">        &#125; catch (<span class="keyword">Exception</span> e) &#123;</span><br><span class="line">            <span class="keyword">log</span>.error("[fdfs-upload]-upload file exception info: &#123;&#125;", e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> getResultMap(<span class="keyword">null</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param filePath 文件路径标识</span></span><br><span class="line"><span class="comment">     * @return 文件字节</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> static Map&lt;String, <span class="keyword">Object</span>&gt; downloadFile(String filePath) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            filePath = filePath.replace(BASE_URL, "");</span><br><span class="line">            StorePath storePath = StorePath.parseFromUrl(filePath);</span><br><span class="line">            String <span class="keyword">group</span> = storePath.getGroup();</span><br><span class="line">            String <span class="type">path</span> = storePath.getPath();</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-download]-start download file ... ");</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-download]-request download file group: &#123;&#125;", <span class="keyword">group</span>);</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-download]-request download file path: &#123;&#125;", <span class="type">path</span>);</span><br><span class="line">            byte[] data = fdfsClientUtil.storageClient.downloadFile(<span class="keyword">group</span>, <span class="type">path</span>, <span class="built_in">new</span> DownloadByteArray());</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-download]-request download file success ... ");</span><br><span class="line">            <span class="keyword">return</span> getResultMap(data, <span class="keyword">null</span>);</span><br><span class="line">        &#125; catch (<span class="keyword">Exception</span> e) &#123;</span><br><span class="line">            <span class="keyword">log</span>.error("[fdfs-download]-download file exception info: &#123;&#125;", e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> getResultMap(<span class="keyword">null</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param filePath 文件路径标识</span></span><br><span class="line"><span class="comment">     * @return 操作结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> static <span class="type">boolean</span> deleteFile(String filePath) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            filePath = filePath.replace(BASE_URL, "");</span><br><span class="line">            StorePath storePath = StorePath.parseFromUrl(filePath);</span><br><span class="line">            String <span class="keyword">group</span> = storePath.getGroup();</span><br><span class="line">            String <span class="type">path</span> = storePath.getPath();</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-delete]-start delete file ... ");</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-delete]-request delete file group: &#123;&#125;", <span class="keyword">group</span>);</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-delete]-request delete file path: &#123;&#125;", <span class="type">path</span>);</span><br><span class="line">            fdfsClientUtil.storageClient.deleteFile(storePath.getGroup(), storePath.getPath());</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-delete]-request delete file success ... ");</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; catch (<span class="keyword">Exception</span> e) &#123;</span><br><span class="line">            <span class="keyword">log</span>.error("[fdfs-delete]-delete file exception info: &#123;&#125;", e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看文件元信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param filePath 文件路径标识</span></span><br><span class="line"><span class="comment">     * @return 文件信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> static Map&lt;String, <span class="keyword">Object</span>&gt; getFileInfo(String filePath) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            filePath = filePath.replace(BASE_URL, "");</span><br><span class="line">            StorePath storePath = StorePath.parseFromUrl(filePath);</span><br><span class="line">            String <span class="keyword">group</span> = storePath.getGroup();</span><br><span class="line">            String <span class="type">path</span> = storePath.getPath();</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-meta]-start meta file ... ");</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-meta]-request meta file group: &#123;&#125;", <span class="keyword">group</span>);</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-meta]-request meta file path: &#123;&#125;", <span class="type">path</span>);</span><br><span class="line">            Map&lt;String, String&gt; infoMap = <span class="built_in">new</span> HashMap&lt;&gt;();</span><br><span class="line">            infoMap.put("createPath", filePath);</span><br><span class="line">            <span class="keyword">Set</span>&lt;MetaData&gt; metaData = fdfsClientUtil.storageClient.getMetadata(storePath.getGroup(), storePath.getPath());</span><br><span class="line">            <span class="keyword">log</span>.<span class="keyword">info</span>("[fdfs-meta]-request meta file success ... ");</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != metaData &amp;&amp; !metaData.isEmpty()) &#123;</span><br><span class="line">                metaData.<span class="keyword">forEach</span>(meta -&gt; &#123;</span><br><span class="line">                    infoMap.put(meta.getName(), meta.getValue());</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> getResultMap(infoMap, <span class="keyword">null</span>);</span><br><span class="line">        &#125; catch (<span class="keyword">Exception</span> e) &#123;</span><br><span class="line">            <span class="keyword">log</span>.error("[fdfs-meta]-meta file exception info: &#123;&#125;", e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> getResultMap(<span class="keyword">null</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封装附件元信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param infoMap 自定义数据</span></span><br><span class="line"><span class="comment">     * @return 附件元信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    private static <span class="keyword">Set</span>&lt;MetaData&gt; getMetaData(Map&lt;String, String&gt; infoMap) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != infoMap &amp;&amp; !infoMap.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">Set</span>&lt;MetaData&gt; metaDataSet = <span class="built_in">new</span> HashSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (String key : infoMap.keySet()) &#123;</span><br><span class="line">                metaDataSet.<span class="keyword">add</span>(<span class="built_in">new</span> MetaData(key, infoMap.<span class="keyword">get</span>(key)));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> metaDataSet;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            DateFormat df = <span class="built_in">new</span> SimpleDateFormat("yyyy-MM-dd HH:mm:ss");</span><br><span class="line">            <span class="keyword">Set</span>&lt;MetaData&gt; metaDataSet = <span class="built_in">new</span> HashSet&lt;&gt;();</span><br><span class="line">            metaDataSet.<span class="keyword">add</span>(<span class="built_in">new</span> MetaData("createUser", "MaxBill"));</span><br><span class="line">            metaDataSet.<span class="keyword">add</span>(<span class="built_in">new</span> MetaData("createDate", df.format(<span class="built_in">new</span> <span class="type">Date</span>())));</span><br><span class="line">            <span class="keyword">return</span> metaDataSet;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封装结果信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param data 数据</span></span><br><span class="line"><span class="comment">     * @param info 信息</span></span><br><span class="line"><span class="comment">     * @return 操作结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    private static Map&lt;String, <span class="keyword">Object</span>&gt; getResultMap(<span class="keyword">Object</span> data, String <span class="keyword">info</span>) &#123;</span><br><span class="line">        Map&lt;String, <span class="keyword">Object</span>&gt; resultMap = <span class="built_in">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(<span class="keyword">info</span>)) &#123;</span><br><span class="line">            resultMap.put("flag", <span class="keyword">true</span>);</span><br><span class="line">            resultMap.put("data", data);</span><br><span class="line">            resultMap.put("info", "success");</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resultMap.put("flag", <span class="keyword">false</span>);</span><br><span class="line">            resultMap.put("info", <span class="keyword">info</span>);</span><br><span class="line">            resultMap.put("data", <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 学分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastDFS </tag>
            
            <tag> 分布式文件系统 </tag>
            
            <tag> 高可用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式文件系统FastDFS安装部署(非高可用)</title>
      <link href="/2128340410.html"/>
      <url>/2128340410.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>本文会搭建一个适合低业务访问业务量的非高可用的FastDFS集群环境：一个Tracker服务，一个storage group中两个storage服务节点；该场景不适合生产环境使用，生产环境应该增加Tracker服务数量使用负载均衡器负载或者使用keepalived进行主备，对于storage group应该搭建多个，每组storage group内节点至少在两个及以上。</p><p>在后台管理的web项目中，对于文件存储、上传、下载等操作是必不可少的。对于单节点部署的系统还可将文件存储在本机上进行操作，但是对于分布式部署的系统来说，文件存储操作问题就显现出来了，必须将文件集中存储在某处。目前一般的存储方案有：1.使用云厂商的对象存储服务；2.使用自建的文件服务器(ftp…)；3.文件磁盘挂在方案；4.使用HDFS或FDFS等文件存储解决方案… 如果项目部署在可连接互联网的网络环境中可以使用云厂商的对象存储服务(安全、便利、低成本…)；但是对于很多政企或者金融的项目大部分都是部署在不能连接互联网的网络环境中，那么我们就只能选择在内网搭建文件服务的方式。为了保证文件数据的安全性和完整性，本文使用分布式文件系统服务FastDFS来实践。</p><h2 id="一、FastDFS简介"><a href="#一、FastDFS简介" class="headerlink" title="一、FastDFS简介"></a><strong>一、FastDFS简介</strong></h2><p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p><p>FastDFS为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用FastDFS很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p><p>FastDFS服务端有两个角色：跟踪器（tracker）和存储节点（storage）。跟踪器主要做调度工作，在访问上起负载均衡的作用。</p><p>存储节点存储文件，完成文件管理的所有功能：就是这样的存储、同步和提供存取接口，FastDFS同时对文件的metadata进行管理。所谓文件的meta data就是文件的相关属性，以键值对（key value）方式表示，如：width=1024，其中的key为width，value为1024。文件metadata是文件属性列表，可以包含多个键值对。</p><p>跟踪器和存储节点都可以由一台或多台服务器构成。跟踪器和存储节点中的服务器均可以随时增加或下线而不会影响线上服务。其中跟踪器中的所有服务器都是对等的，可以根据服务器的压力情况随时增加或减少。</p><p>为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，一个卷下的存储服务器中的文件都是相同的，卷中的多台存储服务器起到了冗余备份和负载均衡的作用。</p><p>在卷中增加服务器时，同步已有的文件由系统自动完成，同步完成后，系统自动将新增服务器切换到线上提供服务。</p><p>当存储空间不足或即将耗尽时，可以动态添加卷。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。</p><p>FastDFS中的文件标识分为两个部分：卷名和文件名，二者缺一不可。</p><p>———简介摘自百度百科</p><h2 id="二、原理介绍"><a href="#二、原理介绍" class="headerlink" title="二、原理介绍"></a><strong>二、原理介绍</strong></h2><h3 id="1-文件上传"><a href="#1-文件上传" class="headerlink" title="1.文件上传"></a>1.文件上传</h3><p>FastDFS以客户端库的方式提供基本的文件访问接口如upload、download、append、delete等，Storage 服务会定时的向Tracker服务发送自己的存储信息。当Tracker 服务集群中的Tracker 服务是多个时，各个Tracker服务之间的关系是对等的，因此客户端上传时会任意选择一个Trackre服务。当Tracker服务收到客户端上传文件请求时，会为该文件分配一个可以存储文件的group，当选定了group后就要决定给客户端分配group中的哪一个storage服务。当分配好storage 服务后，客户端向storage发送写文件请求，storage将会为文件分配一个数据存储目录。然后为文件分配一个文件ID标示，然后根据以上的信息生成文件名存储文件。</p><h3 id="2-文件同步"><a href="#2-文件同步" class="headerlink" title="2.文件同步"></a>2.文件同步</h3><p>上传文件后，客户端将文件写到group内的一个storage 服务即为上传文件成功，storage服务写完文件后，会由后台线程将文件同步至同group内的其他的storage 服务节点上。 每个storage服务写文件后，会同时写一份binlog，binlog里不包含文件数据，只包含文件名等元信息，这份binlog用于后台同步，storage会记录向group内其他storage同步的进度，以便重启后能接上次的进度继续同步；进度以时间戳的方式进行记录，所以最好能保证集群内的所有server的始终保持同步。最后Storage服务的同步进度会作为元数据的一部分汇报到tracker服务上，tracker服务在选择读storage的时候会以同步进度作为参考指标。</p><h3 id="3-下载文件"><a href="#3-下载文件" class="headerlink" title="3.下载文件"></a>3.下载文件</h3><p>当下载文件时，客户端先询问tracker服务下载文件的storage，参数为文件标识（卷名和文件名）；然后tracker向客户端返回一台可用的storage；最后客户端直接和storage通讯完成文件下载。</p><h2 id="三、环境准备"><a href="#三、环境准备" class="headerlink" title="三、环境准备"></a><strong>三、环境准备</strong></h2><h3 id="1-软件环境"><a href="#1-软件环境" class="headerlink" title="1.软件环境"></a>1.软件环境</h3><p>libevent下载地址：<a href="http://libevent.org/" target="_blank" rel="noopener">http://libevent.org/</a></p><p>libfasttcommon下载地址：<a href="https://github.com/happyfish100/libfastcommon/releases" target="_blank" rel="noopener">https://github.com/happyfish100/libfastcommon/releases</a></p><p>fastdfs下载地址：<a href="https://github.com/happyfish100/fastdfs/releases" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs/releases</a></p><p>fastdfs-nginx-module下载地址：<a href="https://github.com/happyfish100/fastdfs-nginx-module/releases" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs-nginx-module/releases</a></p><h3 id="2-机器及网络环境"><a href="#2-机器及网络环境" class="headerlink" title="2.机器及网络环境"></a>2.机器及网络环境</h3><p>Tracker Server1： 192.168.100.101</p><p>Storage Group1 Node1： 192.168.100.102</p><p>Storage Group1 Node2： 192.168.100.103</p><p>Tracker节点需要安装的组件：libevent、libfasttcommon、fastdfs</p><p>Storage节点需要安装的组件：libfasttcommon、fastdfs、nginx、fastdfs-nginx-module</p><h2 id="四、部署Tracker服务"><a href="#四、部署Tracker服务" class="headerlink" title="四、部署Tracker服务"></a><strong>四、部署Tracker服务</strong></h2><p>对应机器：192.168.100.101</p><h3 id="1-安装libevent依赖"><a href="#1-安装libevent依赖" class="headerlink" title="1.安装libevent依赖"></a>1.安装libevent依赖</h3><p>注：如果机器有外网环境直接yum -y install libevent，本文使用源码包编译安装</p><p>解压libevent源码包：tar -zxvf libevent-2.1.11-stable.tar.gz</p><p>编译安装前配置：./configure</p><p>编译安装：make &amp;&amp; make install</p><p>默认安装位置：/usr/local/lib</p><h3 id="2-安装libfasttcommon依赖"><a href="#2-安装libfasttcommon依赖" class="headerlink" title="2.安装libfasttcommon依赖"></a>2.安装libfasttcommon依赖</h3><p>解压libfasttcommon源码包：tar -zxvf libfastcommon-1.0.41.tar.gz</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><p>默认安装位置：/usr/lib64</p><h3 id="3-安装FastDFS-Tracker服务"><a href="#3-安装FastDFS-Tracker服务" class="headerlink" title="3.安装FastDFS Tracker服务"></a>3.安装FastDFS Tracker服务</h3><p>解压fastdfs源码包：tar -zxvf fastdfs-6.01.tar.gz</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><p>安装完成后服务及脚本都拷贝到/usr/bin 目录了：</p><p><a href="https://oscimg.oschina.net/oscnet/39cd95b5f74930e3ec6a61c5f09014cbeb1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/39cd95b5f74930e3ec6a61c5f09014cbeb1.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>安装完成后配置文件都拷贝到/etc/fdfs目录下了：</p><p><a href="https://oscimg.oschina.net/oscnet/2c50c35c47593d618dd6839cd509c64eb7f.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/2c50c35c47593d618dd6839cd509c64eb7f.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>拷贝/etc/fdfs目录下的Tracker配置文件示例：cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf</p><p>修改 /etc/fdfs/tracker.conf中配置项：</p><p>base_path=/home/yuqing/fastdfs 改为：/work/fastdfs/tracker(该目录为自己定义，启动时会用，没有会报错)</p><p>安装完成后启动脚本都拷贝到/etc/init.d目录下了：</p><p><a href="https://oscimg.oschina.net/oscnet/41d522edb4ebd80069b4e02d216ee3662e7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/41d522edb4ebd80069b4e02d216ee3662e7.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>将/etc/init.d/fdfs_storaged删掉，因为这台机器只安装Tracker服务</p><p>注：编译安装fastdfs需要perl库依赖</p><p>设置Tracker服务开机自启动：</p><p>chkconfig –add fdfs_trackerd</p><p>chkconfig fdfs_trackerd on</p><p><a href="https://oscimg.oschina.net/oscnet/fc1976da6dc24ef90a3bb19cf41f36133a4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/fc1976da6dc24ef90a3bb19cf41f36133a4.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>启动Tracker服务：systemctl start fdfs_trackerd</p><p>重启Tracker服务：systemctl restart fdfs_trackerd</p><p>停止Tracker服务：systemctl stop fdfs_trackerd</p><p>开放Tracker服务端口：iptables -I INPUT -p tcp –dport 22122 -j ACCEPT</p><p><a href="https://oscimg.oschina.net/oscnet/79a84e0255a538c1be1b7fcaa528b679f75.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/79a84e0255a538c1be1b7fcaa528b679f75.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h2 id="五、部署Storage服务"><a href="#五、部署Storage服务" class="headerlink" title="五、部署Storage服务"></a><strong>五、部署Storage服务</strong></h2><p>对应机器：192.168.100.102/103</p><h3 id="1-安装libfasttcommon依赖"><a href="#1-安装libfasttcommon依赖" class="headerlink" title="1.安装libfasttcommon依赖"></a>1.安装libfasttcommon依赖</h3><p>解压libfasttcommon源码包：tar -zxvf libfastcommon-1.0.41.tar.gz</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><p>默认安装位置：/usr/lib64</p><h3 id="2-安装FastDFS-Storage服务"><a href="#2-安装FastDFS-Storage服务" class="headerlink" title="2.安装FastDFS Storage服务"></a>2.安装FastDFS Storage服务</h3><p>解压fastdfs源码包：tar -zxvf fastdfs-6.01.tar.gz</p><p>编译安装：./make.sh &amp;&amp; ./make.sh install</p><p>安装完成后服务及脚本都拷贝到/usr/bin 目录了：</p><p><a href="https://oscimg.oschina.net/oscnet/39cd95b5f74930e3ec6a61c5f09014cbeb1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/39cd95b5f74930e3ec6a61c5f09014cbeb1.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>安装完成后配置文件都拷贝到/etc/fdfs目录下了：</p><p><a href="https://oscimg.oschina.net/oscnet/2c50c35c47593d618dd6839cd509c64eb7f.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/2c50c35c47593d618dd6839cd509c64eb7f.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>拷贝/etc/fdfs目录下的Storage配置文件示例：cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf</p><p>修改 /etc/fdfs/storage.conf中配置项：</p><p>base_path=/home/yuqing/fastdfs 改为：base_path=/work/fastdfs/storage(该目录为自己定义，启动时会用，没有会报错)</p><p>store_path0=/home/yuqing/fastdfs 改为：store_path0=/work/fastdfs/storage(该目录为自己定义，启动时会用，没有会报错)</p><p>tracker_server=192.168.209.121:22122 改为：tracker_server=192.168.100.101:22122</p><p>安装完成后启动脚本都拷贝到/etc/init.d目录下了：<br><a href="https://oscimg.oschina.net/oscnet/41d522edb4ebd80069b4e02d216ee3662e7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/41d522edb4ebd80069b4e02d216ee3662e7.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>将/etc/init.d/fdfs_trackerd删掉，因为这台机器只安装Storage服务</p><p>注：编译安装fastdfs需要perl库依赖</p><p>设置Storage服务开机自启动：</p><p>chkconfig –add fdfs_storaged</p><p>chkconfig fdfs_storaged on</p><p><a href="https://oscimg.oschina.net/oscnet/f4454c72a831523fd16864f2e143df31c1c.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/f4454c72a831523fd16864f2e143df31c1c.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>启动Storage服务：systemctl start fdfs_storaged</p><p>重启Storage服务：systemctl restart fdfs_storaged</p><p>停止Storage服务：systemctl stop fdfs_storaged</p><p>开放Storage服务端口：</p><p>iptables -I INPUT -p tcp –dport 23000 -j ACCEPT</p><p>iptables -I INPUT -p tcp –dport 8888 -j ACCEPT</p><p><a href="https://oscimg.oschina.net/oscnet/070ac7f4d6651de1ca22ff603a63f3f92c5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/070ac7f4d6651de1ca22ff603a63f3f92c5.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>Storage服务启动正常，进入数据目录中，可以看到已经有了初始数据信息：</p><p><a href="https://oscimg.oschina.net/oscnet/38304c00e21b90a6288bb2d1bdf3427877d.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/38304c00e21b90a6288bb2d1bdf3427877d.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>验证当前Storage服务和Tracker服务通信情况：</p><p>/usr/bin/fdfs_monitor /etc/fdfs/storage.conf</p><p><a href="https://oscimg.oschina.net/oscnet/d418bf557ff315a754631c5e7a94fc669f2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/d418bf557ff315a754631c5e7a94fc669f2.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="3-安装Nginx和fdfs-nginx模块"><a href="#3-安装Nginx和fdfs-nginx模块" class="headerlink" title="3.安装Nginx和fdfs-nginx模块"></a>3.安装Nginx和fdfs-nginx模块</h3><p>在每个Storage服务节点上安装Nginx服务以及fdfs-nginx模块。</p><p>首先安装nginx需要的依赖：yum install -y gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</p><p>解压nginx安装包：tar -zxvf nginx-1.16.1.tar.gz</p><p>安装配置Nginx：./configure –prefix=/work/nginx –add-module=../fastdfs-nginx-module-1.21/src</p><p>编译安装Nginx：make &amp;&amp; make install</p><p>将fastdfs-nginx-module-1.21/src下的mod_fastdfs.conf拷贝到/etc/fdfs下</p><p>修改mod_fastdfs.conf如下：</p><p>连接超时时间： connect_timeout=10</p><p>Tracker服务地址：tracker_server=192.168.100.101:22122</p><p>Storage服务端口：storage_server_port=23000</p><p>如果文件ID的uri中包含/group**，则要设置为true：url_have_group_name = true</p><p>Storage配置的store_path0路径，必须和storage.conf中的一致：store_path0=/work/fastdfs/storage</p><p>拷贝/etc/fdfs/torage_ids.conf.sample 为torage_ids.conf，内容修改为当前group的storage节点信息：</p><p><a href="https://oscimg.oschina.net/oscnet/b615441115b8325565fc1d976d943c41596.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/b615441115b8325565fc1d976d943c41596.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>修改各个Storage机器上的nginx服务的配置如下：</p><h2 id="六、使用Java客户端测试FastDFS"><a href="#六、使用Java客户端测试FastDFS" class="headerlink" title="六、使用Java客户端测试FastDFS"></a><strong>六、使用Java客户端测试FastDFS</strong></h2><h3 id="1-java项目Maven依赖"><a href="#1-java项目Maven依赖" class="headerlink" title="1.java项目Maven依赖"></a>1.java项目Maven依赖</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">dts</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">项目地址：https:<span class="comment">//github.com/tobato/FastDFS_Client</span></span><br><span class="line"></span><br><span class="line">目前客户端主要依赖于SpringBoot，因此必须引入:</span><br><span class="line"><span class="params">&lt;parent&gt;</span></span><br><span class="line">   <span class="params">&lt;groupId&gt;</span>org.springframework.boot<span class="params">&lt;/groupId&gt;</span></span><br><span class="line">   <span class="params">&lt;artifactId&gt;</span>spring-boot-starter-parent<span class="params">&lt;/artifactId&gt;</span></span><br><span class="line">   <span class="params">&lt;version&gt;</span><span class="number">2.0</span><span class="number">.0</span>.RELEASE<span class="params">&lt;/version&gt;</span></span><br><span class="line">   <span class="params">&lt;relativePath/&gt;</span></span><br><span class="line"><span class="params">&lt;/parent&gt;</span></span><br><span class="line"></span><br><span class="line">FastDFS 依赖包：</span><br><span class="line"><span class="params">&lt;dependency&gt;</span></span><br><span class="line">    <span class="params">&lt;groupId&gt;</span>com.github.tobato<span class="params">&lt;/groupId&gt;</span></span><br><span class="line">    <span class="params">&lt;artifactId&gt;</span>fastdfs-client<span class="params">&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="params">&lt;version&gt;</span><span class="number">1.26</span><span class="number">.7</span><span class="params">&lt;/version&gt;</span></span><br><span class="line"><span class="params">&lt;/dependency&gt;</span></span><br><span class="line"></span><br><span class="line">将FastDFS引入项目：</span><br><span class="line">@Import(FdfsClientConfig.class)</span><br><span class="line"></span><br><span class="line">在application.yml当中配置Fdfs相关参数：</span><br><span class="line"><span class="meta"># ===================================================================</span></span><br><span class="line"><span class="meta"># 分布式文件系统FDFS配置</span></span><br><span class="line"><span class="meta"># ===================================================================</span></span><br><span class="line"><span class="symbol">fdfs:</span></span><br><span class="line">  so-timeout: <span class="number">1500</span></span><br><span class="line">  connect-timeout: <span class="number">600</span></span><br><span class="line">  thumb-image:</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">150</span></span><br><span class="line"><span class="symbol">    height:</span> <span class="number">150</span></span><br><span class="line">  tracker-list:</span><br><span class="line">    - <span class="number">192.168</span><span class="number">.100</span><span class="number">.101</span>:<span class="number">22122</span></span><br><span class="line"></span><br><span class="line">使用接口服务对Fdfs服务端进行操作，主要接口包括：</span><br><span class="line">TrackerClient - TrackerServer接口</span><br><span class="line">GenerateStorageClient - 一般文件存储接口 (StorageServer接口)</span><br><span class="line">FastFileStorageClient - 为方便项目开发集成的简单接口(StorageServer接口)</span><br><span class="line">AppendFileStorageClient - 支持文件续传操作的接口 (StorageServer接口)</span><br></pre></td></tr></table></figure></div><h3 id="2-实际测试案例"><a href="#2-实际测试案例" class="headerlink" title="2.实际测试案例"></a>2.实际测试案例</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">arduino</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.maxbill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.domain.fdfs.MetaData;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.domain.fdfs.StorePath;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.service.FastFileStorageClient;</span><br><span class="line"><span class="keyword">import</span> com.github.tobato.fastdfs.service.TrackerClient;</span><br><span class="line"><span class="keyword">import</span> lombok.<span class="keyword">extern</span>.log4j.Log4j2;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="built_in">File</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line">@Log4j2</span><br><span class="line">@Component</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FdfsClientUtil</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> FdfsClientUtil fdfsClientUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    <span class="keyword">private</span> TrackerClient trackerClient;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    <span class="keyword">private</span> FastFileStorageClient storageClient;</span><br><span class="line"></span><br><span class="line">    @PostConstruct</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        fdfsClientUtil = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Set&lt;MetaData&gt; getMetaData(Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; infoMap) &#123;</span><br><span class="line">        Set&lt;MetaData&gt; metaDataSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        metaDataSet.add(<span class="keyword">new</span> MetaData(<span class="string">"createUser"</span>, <span class="string">"maxbill"</span>));</span><br><span class="line">        metaDataSet.add(<span class="keyword">new</span> MetaData(<span class="string">"createDate"</span>, <span class="string">"2019-11-18"</span>));</span><br><span class="line">        <span class="keyword">return</span> metaDataSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> <span class="title">uploadFile</span><span class="params">(<span class="built_in">File</span> file, Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; infoMap)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">String</span> fileName = file.getName();</span><br><span class="line">            <span class="keyword">String</span> fileType = fileName.substring(fileName.lastIndexOf(<span class="string">"\\"</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">log</span>.info(<span class="string">"upload file name: &#123;&#125;"</span>, fileName);</span><br><span class="line">            StorePath path = fdfsClientUtil.storageClient.uploadFile(<span class="keyword">new</span> FileInputStream(file), file.length(), fileType, getMetaData(infoMap));</span><br><span class="line">            <span class="built_in">log</span>.info(<span class="string">"upload success path: &#123;&#125;"</span>, path);</span><br><span class="line">            Set&lt;MetaData&gt; metaData = fdfsClientUtil.storageClient.getMetadata(path.getGroup(), path.getPath());</span><br><span class="line">            <span class="built_in">log</span>.info(<span class="string">"upload success meta: &#123;&#125;"</span>, metaData);</span><br><span class="line">            <span class="keyword">return</span> path.getFullPath();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="built_in">log</span>.error(e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> e.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 学分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastDFS </tag>
            
            <tag> 分布式文件系统 </tag>
            
            <tag> 高可用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java深究之String、StringBuffer、StringBuilder的区别</title>
      <link href="/2840479785.html"/>
      <url>/2840479785.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>在Java学习中，String、StringBuffer、StringBuilder三者是很重要的，在编写代码中经常使用到他们，那么深入的了解他们的异同是非常重要的，接下里我们详细剖析下这三个的异同之处</p><p><strong><em>首先总结下这三者的区别：</em></strong></p><p><strong>1.基本区别</strong></p><p>String的对象不可变，StringBuffer和StringBuilder的对象是可变的</p><p><strong>2.性能区别</strong></p><p>三者中StringBuilder执行速度最佳，StringBuffer次之，String的执行速度最慢（String为字符串常量，而StringBuilder和StringBuffer均为字符串变量，String对象一旦创建后该对象是不可更改的，后两者的对象是变量是可以更改的）</p><p><strong>3.安全区别</strong></p><p>String、StringBuffer是线程安全的，StringBuilder是线程不安全的（所以如果程序是单线程的使用StringBuilder效率高，如果是多线程使用StringBuffer或者String）</p><p><em><strong>其次总结下这三者的相同：</strong></em></p><p>1.三者在java中都是用来处理字符串的</p><p>2.三个类都被final修饰，因此都是不可继承的</p><p>3.StringBuilder与StringBuffer有公共父类AbstractStringBuilder(抽象类)</p><p><em><strong>接下来我们从源码和案例深入分析这三者：</strong></em></p><p><strong>1.String</strong></p><p><a href="https://oscimg.oschina.net/oscnet/58422cbfc4738f98ce1c69c26c5889b7016.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/58422cbfc4738f98ce1c69c26c5889b7016.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>String常用方法：</p><p>1.length（） 获取字符串长度</p><p>2.replace（） 替换字符串中某些字符</p><p>3.equals（） 比较两个字符对象内容是否相同</p><p>4.substring（） 截取一个新的字符串，它是此字符串中的子串</p><p>5.trim（） 将字符串开头的空白（空格）和尾部的空白去掉</p><p>6.indexOf（） 求某个字符在字符串中的位置</p><p>7.charAt（） 求一个字符串中某个位置的值</p><p>8.toLowerCase（） 将字符串中所有的大写改变成小写</p><p>9.toUpperCase（） 将字符串中所有的小写改变为大写</p><p><a href="https://oscimg.oschina.net/oscnet/ed47594e4e2c11e5517952bda15a13663c9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/ed47594e4e2c11e5517952bda15a13663c9.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>注意：</p><p>1.String是final类型，不可被继承；</p><p>2.String的对象不可变</p><p><a href="https://oscimg.oschina.net/oscnet/098a46d4ac86b016e570c1d57611c0070b2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/098a46d4ac86b016e570c1d57611c0070b2.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>从上面这个案例我们发现a对象的内容被改变了，不是说不能改变么，这里我们不能被表面迷惑，我们再看下面的程序</p><p><a href="https://oscimg.oschina.net/oscnet/451a0f2e887124165318d0910715e875693.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/451a0f2e887124165318d0910715e875693.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>我们发现字符串a被重新赋值后其实已经不是它自己了，从hashCode值可以看出。当a字符串创建赋值maxbill，然后重新赋值时又会创建一个a对象值为：maxbill1993，此时844527467是一已经在等待GC回收了，我们看到的实际上是-1438782163对象。所以我们在程序中对字符串使用+连接时，并不是把内容动态的改变进去，而是每次都会创建一个新的String对象去放新的字符内容，原来的对象会等着GC回收，所以这也是String为啥相比其他两者执行慢的原因了。</p><p><strong>2. StringBuffer</strong></p><p><a href="https://oscimg.oschina.net/oscnet/76a088b2c78b2725f249d01aaac64a3ab7e.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/76a088b2c78b2725f249d01aaac64a3ab7e.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/348c50773408ec456af5f6d0fffd6e286e9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/348c50773408ec456af5f6d0fffd6e286e9.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>从StringBuffer类的源码可以看出，其方法都被同步锁synchronized修饰，因此是线程安全的，因此在多线程编程中操作字符串是推荐使用为什么说StringBuffer比String的执行速度要高，前面说了String的原理，是导致其慢的原因，StringBuffer相比快是因为使用了字符串变量，是可以动态改变的，不必像String一样总是去创建对象赋值新内容，我们</p><p>看下面的案例就明白了</p><p><a href="https://oscimg.oschina.net/oscnet/0239d47ff547c2f24599d5f0eaf1641803c.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/0239d47ff547c2f24599d5f0eaf1641803c.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>由上面的案例可以看出StringBuffer在修改字符串内容时，不会创建新的对象，因此它比String类效率更高</p><p>StringBuffer常用方法：</p><p>1.length（） 获取StringBuffer字符长度</p><p>2.append（） 向StringBuffer增加字符</p><p>3.delete（） 删除StringBuffer中的字符</p><p>4.replace（） 替换StringBuffer中的字符</p><p>5.insert（） 向StringBuffer中插入字符</p><p>6.toString （） 把StringBuffer转成字符串</p><p>StringBuffer的append方法源码解读：</p><p><a href="https://oscimg.oschina.net/oscnet/54c519f69db61c95b2c91f73bd06a9880f3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/54c519f69db61c95b2c91f73bd06a9880f3.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/a248ac03f7a778bf2fc87cbf17d2021e58e.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/a248ac03f7a778bf2fc87cbf17d2021e58e.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>调用了父类的append方法，我们看下父类append的源码</p><p><a href="https://oscimg.oschina.net/oscnet/7b91dba0e4a898112cd402ede6671ec7cd7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/7b91dba0e4a898112cd402ede6671ec7cd7.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/1ce1a2de74d9f9e9a0b5a57c76a4114aa1b.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/1ce1a2de74d9f9e9a0b5a57c76a4114aa1b.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/aee8353c3460f5f9b529e88d0dfb3ba8e03.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/aee8353c3460f5f9b529e88d0dfb3ba8e03.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/6a6e9e77a96a39a33465c7d01135a96b56c.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/6a6e9e77a96a39a33465c7d01135a96b56c.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/5e1065447b0410be1883b7cc6cc1b530801.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/5e1065447b0410be1883b7cc6cc1b530801.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://oscimg.oschina.net/oscnet/613de619050047539c30999612b6e4bc08e.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/613de619050047539c30999612b6e4bc08e.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>基本原理：使用append()方法在字符串后面追加东西的时候，如果长度超过了该字符串存储空间大小了就需要进行扩容，构建新的存储空间更大的字符串，将旧的数据的复制过去</p><p>详细原理：char value[]用来存储数据，int count用来记录字符长度，StringBuffer初始16个字符容量 ，先记录下传进来字符串的长度，然后使用ensureCapacityInternal函数判是否需要扩容，如果容量不够则使用newCapacity进行扩容，新容量扩为原来2倍+2，存储容量够了使用getChars函数复制数据，最后将count更新。</p><p><strong>3. StringBuilder</strong></p><p><a href="https://oscimg.oschina.net/oscnet/cf4cab5758d8ef24ed2c20eff57a4cb3a95.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/cf4cab5758d8ef24ed2c20eff57a4cb3a95.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>StringBuilder和StringBuffer的使用方法和原理基本一致的，唯一的区别就是StringBuilder是线程不安全的，执行效率要比StringBuffer高，因此当时单线程的时候推荐使用线程不安全的StringBuilder效率更高一些，如果是多线程推荐使用StringBuffer来保证线程安全</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 代码深究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> String </tag>
            
            <tag> StringBuffer </tag>
            
            <tag> StringBuilder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java深究之final、finally、finalize三者的区别</title>
      <link href="/4599877800.html"/>
      <url>/4599877800.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>在java中final、finally、finalize三者在写法上很相近，但是实际含义和作用却是相差甚远。本文主要是来深层的研究下这三者的用法以及之间的区别</p><p><strong>1.final</strong></p><p>属性：java中的关键字，修饰符</p><p>作用：用于修饰类、成员方法、变量（成员变量、局部变量）</p><p>用法：如果类被声明为final，那么该类就不能再派生出新的子类，也不能当作父类被子类继承。一个类不能同时被声明为抽象类（absrtact修饰）和final的类；如果成员方法被声明final，那么该方法只能使用，不能重载；如果变量（成员变量、局部变量）被声明为final，那么必须在声明时给定初始化的值，在后面的引用中只能读取，不可修改值。</p><p>注意：1.类被声明为final，类中的所有成员方法都会被隐式地指定为final方法； 2. final成员变量必须在声明的时候初始化或者在构造器中初始化，否则编译时会报错； 3.在匿名类（内部类）中所有变量都必须是final变量； 4.在接口中声明的所有变量本身是final的； 5.如果基本数据类型的变量被声明为final，则其数值一旦在初始化之后便不能更改</p><p><a href="https://oscimg.oschina.net/oscnet/135f772d6d484d11d8f0da62d63ac441197.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/135f772d6d484d11d8f0da62d63ac441197.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>如果引用类型的变量被声明为final，则在对其初始化之后便不能再让其指向另一个对象，但该对象的内容是可以改变的</p><p><a href="https://oscimg.oschina.net/oscnet/50b42e4445d80f1b53e7b36ec4284b48c78.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/50b42e4445d80f1b53e7b36ec4284b48c78.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>6.当final变量是基本数据类型以及String类型时，在编译期间是知道它的确切值，那么编译器会把它当做编译期常量，在用到该final变量的地方，相当于直接访问的这个常量</p><p><a href="https://oscimg.oschina.net/oscnet/099ea033fb54b237e7377305d4858932fa3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/099ea033fb54b237e7377305d4858932fa3.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>只有在编译期间能确定final变量值的时候才会被当编译常量，以下是编译时不知道确定值的</p><p><a href="https://oscimg.oschina.net/oscnet/642942af101c9a8c8cdc9619a26edb47ca0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/642942af101c9a8c8cdc9619a26edb47ca0.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><strong>2.finally</strong></p><p>属性：异常处理时的finally块</p><p>作用: try { 正常逻辑 } catch(Exception e) { 异常逻辑 } finally{ 一定会被执行的逻辑 }</p><p>用法：异常处理（try catch）时finally块无论有没有异常发生，finally块的代码一定会被执行，所以在程序中有需要无论发生什么都必须执行的代码，就可以放在finally块中，最常见流关闭等释放资源的操作</p><p>注意：1.finally代码块无论有没有异常发生，finally块的代码一定会被执行； 2.即使try里包含continue、break、return语句，try块结束后，finally块也会执行； 3.finally中最好不要包含return，否则程序会提前退出，返回值不是try或catch中保存的返回值</p><p><strong>3.finalize</strong></p><p>属性：方法名，Object中的方法</p><p>作用：finalize()方法是在垃圾收集器删除对象之前对这个对象调用</p><p>用法：Java中使用finalize()方法在垃圾收集器将对象从内存中清除出去之前（GC之前）做必要的清理内存的工作。这个方法是在垃圾收集器确认一个对象没有被引用时对这个对象调用的。它在Object类中定义的，所有的类都继承了它。子类覆盖finalize()方法已整理系统资源或者执行其他清理工作。finalize()方法是在垃圾收集器删除对象之前对这个对象调用的</p><p>注意：1.垃圾回收器要回收对象的时候，首先要调用这个类的finalize方法</p><p><a href="https://oscimg.oschina.net/oscnet/01ba97e2a7db45797bca01967f2dc1093ac.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/01ba97e2a7db45797bca01967f2dc1093ac.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>2.程序退出时为每个对象调用一次finalize方法</p><p>3.当某个对象被系统收集为无用信息的时候,finalize()将被自动调用,但是jvm不保证finalize()一定被调用</p><p>4.finalize()方法被关键字protected修饰是防止在该类之外定义的代码访问finalize()标识符</p><p><a href="https://oscimg.oschina.net/oscnet/8bd8c55421159839091fc1a8c23602762ea.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://oscimg.oschina.net/oscnet/8bd8c55421159839091fc1a8c23602762ea.jpg" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>5.finalize()方法的主要用途是释放一些其他做法开辟的内存空间，以及做一些清理工作</p><p>6.一旦垃圾回收器GC准备好释放对象占用的存储空间，首先会去调用finalize()方法进行一些必要的清理工作。只有到下一次再进行垃圾回收动作的时候，才会真正释放这个对象所占用的内存空间</p><p>7.finalize()现在已经不推荐使用了，java9已经设置为deprecated了</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 代码深究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> final </tag>
            
            <tag> finally </tag>
            
            <tag> finalize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop(02)-使用JavaApi对HDFS进行基本操作</title>
      <link href="/3224700853.html"/>
      <url>/3224700853.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p><em>** 本文源码码云地址：<a href="https://gitee.com/MaxBill/Hadoop" target="_blank" rel="noopener">https://gitee.com/MaxBill/Hadoop</a>**</em></p><p>在上篇《<a href="https://www.maxbill.cn/3609085320.html">Hadoop(01)-Windows平台下Hadoop环境搭建</a>》中，实践了在windows平台下使用搭建hadoop开发环境，同时搭建完毕在基于命令行的形式对HDFS进行了基本的操作，本文我们会在搭建的hadoop的基础平台上使用JAVA API来对HDFS进行简单的操作。</p><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><p>1.windows下hadoop开发环境：参见《<a href="https://www.maxbill.cn/3609085320.html">Hadoop(01)-Windows平台下Hadoop环境搭建</a>》</p><p>2.IDEA 开发编辑器</p><h2 id="二、开发准备"><a href="#二、开发准备" class="headerlink" title="二、开发准备"></a>二、开发准备</h2><h3 id="1-新建一个SpringBoot项目"><a href="#1-新建一个SpringBoot项目" class="headerlink" title="1.新建一个SpringBoot项目"></a>1.新建一个SpringBoot项目</h3><p>使用IDEA新建一个SpringBoot项目，参见《<a href="https://my.oschina.net/zss1993/blog/856587" target="_blank" rel="noopener">SpringBoot学习之路：02.第一个程序Hello World及项目结构介绍</a>》，如下是我新建的项目结构：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/125251_dSJF_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/125251_dSJF_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="2-添加操作HDFS的依赖包"><a href="#2-添加操作HDFS的依赖包" class="headerlink" title="2.添加操作HDFS的依赖包"></a>2.添加操作HDFS的依赖包</h3><p>在刚建的SpringBoot项目的pom.xml文件里添加hadoop的依赖包hadoop-common, hadoop-client, hadoop-hdfs：</p><dependency><groupid>org.apache.hadoop</groupid><artifactid>hadoop-common</artifactid><version>2.8.2</version></dependency><dependency><groupid>org.apache.hadoop</groupid><artifactid>hadoop-hdfs</artifactid><version>2.8.2</version></dependency><dependency><groupid>org.apache.hadoop</groupid><artifactid>hadoop-client</artifactid><version>2.8.2</version></dependency><h3 id="3-启动hadoop服务"><a href="#3-启动hadoop服务" class="headerlink" title="3.启动hadoop服务"></a>3.启动hadoop服务</h3><p>进入hadoop安装目录下的sbin中，执行脚本start-dfs.cmd</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/113709_wcFP_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/113709_wcFP_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1116/113758_VVEq_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/113758_VVEq_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>这时hadoop服务已经成功启动。</p><h2 id="三、开始编码"><a href="#三、开始编码" class="headerlink" title="三、开始编码"></a>三、开始编码</h2><p>对HDFS操作设计以下几个主要的类：</p><p>Configuration：封装了客户端或者服务器的配置信息</p><p>FileSystem：此类的对象是一个文件系统对象，可以用该对象的一些方法来对文件进行操作通过FileSystem的静态方法get获得该对象，例：FileSystem hdfs = FileSystem.get(conf);</p><p>FSDataInputStream：这是HDFS中的输入流，通过由FileSystem的open方法获取</p><p>FSDataOutputStream：这是HDFS中的输出流，通过由FileSystem的create方法获取</p><h3 id="1-获取hadoop配置信息"><a href="#1-获取hadoop配置信息" class="headerlink" title="1.获取hadoop配置信息"></a>1.获取hadoop配置信息</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/130355_W3Yn_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/130355_W3Yn_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="2-获取文件系统对象"><a href="#2-获取文件系统对象" class="headerlink" title="2.获取文件系统对象"></a>2.获取文件系统对象</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/130413_lQUL_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/130413_lQUL_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>客户端去操作HDFS时，是有一个用户身份的,默认情况下，HDFS客户端API会从JVM中获取一个参数来作为自己的用户身份：DHADOOP_USER_NAME=hadoop</p><p>FileSystem hdfs = FileSystem.get(getHdfsConfig()); //默认获取</p><p>也可以在构造客户端fs对象时，通过参数传递进去</p><p>FileSystem hdfs = FileSystem.get(new URI(rootPath), getHdfsConfig(), “你的用户名”);</p><h3 id="3-创建文件夹操作"><a href="#3-创建文件夹操作" class="headerlink" title="3.创建文件夹操作"></a>3.创建文件夹操作</h3><p>先看下我们使用的用户下的目录（注：本文使用Administrator用户）：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/134602_ORtB_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/134602_ORtB_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>可以看到该用户下为空目录，然后编写程序运行测试：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/131704_uRDl_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/131704_uRDl_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a>)<a href="https://static.oschina.net/uploads/space/2017/1116/131728_Gg0N_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/131728_Gg0N_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>此时查看maxbill目录</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/134516_XhDO_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/134516_XhDO_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="4-创建文件操作"><a href="#4-创建文件操作" class="headerlink" title="4.创建文件操作"></a>4.创建文件操作</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/134952_ISM9_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/134952_ISM9_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>运行测试创建文件后查看目录：（在刚创建的demo目录创建maxbill.txt文件，并写入hello world）</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/135646_Sb8m_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/135646_Sb8m_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="5-读取文件内容操作"><a href="#5-读取文件内容操作" class="headerlink" title="5.读取文件内容操作"></a>5.读取文件内容操作</h3><p>读取刚才创建的maxbill.txt文件</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/135943_1MKF_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/135943_1MKF_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="6-读取目录信息"><a href="#6-读取目录信息" class="headerlink" title="6.读取目录信息"></a>6.读取目录信息</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/141755_BLMh_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/141755_BLMh_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a>)<a href="https://static.oschina.net/uploads/space/2017/1116/141923_kBNg_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/141923_kBNg_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>读出那会我们创建的demo目录的详细信息：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/142012_CFiC_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142012_CFiC_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="7-读取文件列表"><a href="#7-读取文件列表" class="headerlink" title="7.读取文件列表"></a>7.读取文件列表</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/142122_hP4F_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142122_hP4F_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a><br>读出那会我们创建的demo目录下的文件：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/142226_Hj9z_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142226_Hj9z_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1116/142320_Sinq_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142320_Sinq_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="8-重命名文件"><a href="#8-重命名文件" class="headerlink" title="8.重命名文件"></a>8.重命名文件</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/142557_lME3_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142557_lME3_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1116/142730_FewD_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142730_FewD_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>运行重命名程序后，查看文件已经被重命名：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/142828_7veY_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/142828_7veY_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="9-删除文件"><a href="#9-删除文件" class="headerlink" title="9.删除文件"></a>9.删除文件</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/143213_9zeH_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/143213_9zeH_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1116/143125_U9qx_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/143125_U9qx_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>运行删除程序后，查看文件已经被删除：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/143246_0LMU_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/143246_0LMU_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="10-上传文件"><a href="#10-上传文件" class="headerlink" title="10.上传文件"></a>10.上传文件</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/144655_12fp_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/144655_12fp_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a>)<a href="https://static.oschina.net/uploads/space/2017/1116/144051_CY1X_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/144051_CY1X_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>运行上传程序后，查看文件已经被上传到指定目录：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/144222_JmCv_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/144222_JmCv_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="11-下载文件"><a href="#11-下载文件" class="headerlink" title="11.下载文件"></a>11.下载文件</h3><p><a href="https://static.oschina.net/uploads/space/2017/1116/144712_RDgR_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/144712_RDgR_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>运行下载程序后，查看文件已经被下载到指定目录：</p><p><a href="https://static.oschina.net/uploads/space/2017/1116/145003_wjsy_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1116/145003_wjsy_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>下载后多出一个crc文件，还没注意是啥作用</p><h2 id="四、最后总结"><a href="#四、最后总结" class="headerlink" title="四、最后总结"></a>四、最后总结</h2><p>通过使用java api操作hadoop的hdfs，给我的感觉是和阿里的对象存储类似的效果，hdfs可以用来架设公司的云盘等服务，也可作文件服务器使用，本文使用的单机操作，后面会使用集群来进行实践。</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 学大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式文件系统 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> HDFS </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop(01)-Windows平台下Hadoop环境搭建</title>
      <link href="/3609085320.html"/>
      <url>/3609085320.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri Feb 14 2020 19:06:53 GMT+0800 (GMT+08:00) --><p>hadoop是运行在linux系统下的一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序，充分利用集群的威力进行高速运算和存储。今天我们要在windows环境下搭建hadoop的环境，Windows下运行Hadoop，通常有两种方式：一种是用VM方式安装一个Linux操作系统，这样基本可以实现全Linux环境的Hadoop运行；另一种是通过Cygwin模拟Linux环境。后者的好处是使用比较方便，安装过程也简单。今天我们使用第三种方式不需要虚拟机和cygwin依赖，相对简便很多。</p><h2 id="一、环境搭建准备"><a href="#一、环境搭建准备" class="headerlink" title="一、环境搭建准备"></a>一、环境搭建准备</h2><p>1.windows系统（win7及以上）</p><p>2.hadoop程序包（本文使用最新稳定版hadoop-2.8.2），下载地址：</p><p><a href="http://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-2.8.2" target="_blank" rel="noopener">http://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-2.8.2</a></p><p>3.下载hadoop在windows上需要的winutils支持和hadoop.dll依赖库，下载地址：</p><p><a href="https://github.com/steveloughran/winutils" target="_blank" rel="noopener">https://github.com/steveloughran/winutils</a> （注：选择自己对应的版本）</p><h2 id="二、开始搭建步骤"><a href="#二、开始搭建步骤" class="headerlink" title="二、开始搭建步骤"></a>二、开始搭建步骤</h2><h3 id="1-安装hadoop"><a href="#1-安装hadoop" class="headerlink" title="1.安装hadoop"></a>1.安装hadoop</h3><p>将刚才下载的hadoop-2.8.2程序包解压到windows的磁盘目录下（注：无空格目录，最好不要汉语）</p><p>然后配置hadoop的环境变量：新建HADOOP_HOME，定位到hadoop解压目录，如：</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/110848_aXwv_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/110848_aXwv_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>D:\tool\bigdata\hadoop （注：我的目录，大家换成自己的目录）path环境变量中增加：</p><p>%HADOOP_HOME%\bin;</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/104851_gHyc_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/104851_gHyc_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="2-下载安装JDK环境"><a href="#2-下载安装JDK环境" class="headerlink" title="2.下载安装JDK环境"></a>2.下载安装JDK环境</h3><p>jdk安装配置此处省略，我的其他地方已经提及，或者大家自己百度搭建</p><h3 id="3-配置Hadoop依赖库"><a href="#3-配置Hadoop依赖库" class="headerlink" title="3.配置Hadoop依赖库"></a>3.配置Hadoop依赖库</h3><p>将winutils.exe放到hadoop的bin目录下，将hadoop.dll放到C盘/windows/System目录下</p><p>注：如果出现依赖性异常问题可以将hadoop.dll放到C盘/windows/System32解决</p><h3 id="4-测试hadoop环境"><a href="#4-测试hadoop环境" class="headerlink" title="4.测试hadoop环境"></a>4.测试hadoop环境</h3><p>在hadoop的bin目录下按住shift右击选择在此处打开命令行，输入hadoop version命令查看信息：</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/112152_SmJS_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/112152_SmJS_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="5-配置hadoop"><a href="#5-配置hadoop" class="headerlink" title="5.配置hadoop"></a>5.配置hadoop</h3><p>修改hadoop核心配置文件hadoop/etc/hadoop/core-site.xml</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/112902_F0n5_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/112902_F0n5_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a>修改hdfs配置文件hadoop/etc/hadoop/hdfs-site.xml</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/125413_Qwss_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/125413_Qwss_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>修改hdfs配置文件hadoop/etc/hadoop/mapred-site.xml</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/121008_suB2_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/121008_suB2_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>修改hdfs配置文件hadoop/etc/hadoop/yarn-site.xml</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/121116_paJp_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/121116_paJp_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><h3 id="6-启动hadoop环境"><a href="#6-启动hadoop环境" class="headerlink" title="6.启动hadoop环境"></a>6.启动hadoop环境</h3><p>启动前先执行hdfs namenode -format格式化系统文件命令（注：hadoop/bin下执行）</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/121545_gw8j_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/121545_gw8j_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1113/121644_9FFJ_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/121644_9FFJ_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>此时已进行完初始化系统第一步，接下来cd到hadoop/sbin目录下，按住shift右击选择在此处打开命</p><p>令行执行 start-dfs 命令启动hadoop</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/122059_7GLR_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/122059_7GLR_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1113/122135_Jxed_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/122135_Jxed_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>查看控制台日志发现启动报出异常，没有启动成功：查看控制台错误时缺少库文件，好像忘记把hadoop.dll文件加到hadoop的bin目录下了，于是拷贝粘贴再次执行start-dfs命令</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/124132_fdGp_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/124132_fdGp_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p><a href="https://static.oschina.net/uploads/space/2017/1113/124206_3wEO_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/124206_3wEO_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>此时成功启动，在浏览器地址栏输入<a href="http://127.0.0.1:50070/" target="_blank" rel="noopener">http://127.0.0.1:50070/</a></p><p><a href="https://static.oschina.net/uploads/space/2017/1113/124335_j5Qc_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/124335_j5Qc_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>此时说明hadoop在windows平台下已经成功搭建完成。</p><h2 id="三、hadoop的简单使用"><a href="#三、hadoop的简单使用" class="headerlink" title="三、hadoop的简单使用"></a>三、hadoop的简单使用</h2><h3 id="1-简单操作hdfs"><a href="#1-简单操作hdfs" class="headerlink" title="1.简单操作hdfs"></a>1.简单操作hdfs</h3><p>由于已经在环境变量中配置了hadoop/bin目录此时在命令行中直接就可使欢乐的使用hdfs的命令了</p><p>&lt;1&gt;.显示文件命令：hdfs dfs -ls</p><p>&lt;2&gt;.创建目录（文件夹）命令：hdfs dfs -mkdir &lt;目录&gt;</p><p>&lt;3&gt;.文件的输入命令：hdfs dfs -put &lt;源文件目录&gt; &lt;hdfs文件目录&gt;</p><p>&lt;4&gt;.文件内容显示命令：hdfs dfs -cat &lt;文件目录&gt;</p><p>&lt;5&gt;.删除文件命令：hdfs dfs -&lt;文件目录&gt;</p><h3 id="2-可视化hdfs资源"><a href="#2-可视化hdfs资源" class="headerlink" title="2.可视化hdfs资源"></a>2.可视化hdfs资源</h3><p>使用命令行操作可能会觉得不清晰，于是hadoop为我们提供了可视化操作：我们进入hadoop/sbin目录下输入start-yarn命令回车，然后访问<a href="http://127.0.0.1:8088" target="_blank" rel="noopener">http://127.0.0.1:8088</a>就可以可视化的查看资源以及进行节点管理的操作。</p><p><a href="https://static.oschina.net/uploads/space/2017/1113/131214_Dhmq_2846946.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://static.oschina.net/uploads/space/2017/1113/131214_Dhmq_2846946.png" src="https://cdn.maxbill.cn/blog/img/loading.gif" class="lazyload"></a></p><p>其他web管理界面地址：</p><p>| NameNode | <a href="http://127.0.0.1:50070/" target="_blank" rel="noopener">http://127.0.0.1:50070/</a> | 默认 HTTP 端口为 50070. |<br>| ResourceManager | <a href="http://127.0.0.1:8088/" target="_blank" rel="noopener">http://127.0.0.1:8088/</a> | 默认 HTTP端口为 8088 |<br>| MapReduce JobHistory Server | <a href="http://127.0.0.1:19888/" target="_blank" rel="noopener">http://127.0.0.1:19888/</a> | 默认 HTTP 端口为 19888 |</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 学大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式文件系统 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> HDFS </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
